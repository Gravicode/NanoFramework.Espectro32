<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nanoFramework.Runtime.Native</name>
    </assembly>
    <members>
        <member name="T:nanoFramework.Runtime.Native.Debug">
            <summary>
            Provides a set of methods and properties that help developers to debug code.
            </summary>
        </member>
        <member name="M:nanoFramework.Runtime.Native.Debug.GC(System.Boolean)">
            <summary>
            Runs GC (garbage collection), a service that automatically reclaims unused computer memory.
            </summary>
            <param name="force">true if garbage collection should be forced; otherwise, false.</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Runtime.Native.Debug.EnableGCMessages(System.Boolean)">
            <summary>
            Specifies whether GC (garbage collection) messages are enabled.
            </summary>
            <param name="enable">true to enable output of messages; otherwise, false.</param>
        </member>
        <member name="M:nanoFramework.Runtime.Native.Debug.Assert(System.Boolean)">
            <summary>
            Causes a break in execution if the specified assertion (condition) evaluates to false.
            </summary>
            <param name="condition">The condition to be evaluated. If the value is false, program execution stops.</param>
        </member>
        <member name="M:nanoFramework.Runtime.Native.Debug.Assert(System.Boolean,System.String)">
            <summary>
            Causes a break in execution if the specified assertion (condition) evaluates to false.
            </summary>
            <param name="condition">The condition to be evaluated. If the value is false, program execution stops.</param>
            <param name="message">The text to be output if the assertion is false.</param>
        </member>
        <member name="M:nanoFramework.Runtime.Native.Debug.Assert(System.Boolean,System.String,System.String)">
            <summary>
            Causes a break in execution if the specified assertion (condition) evaluates to false.
            </summary>
            <param name="condition">The condition to be evaluated. If the value is false, program execution stops.</param>
            <param name="message">The text to be output if the assertion is false.</param>
            <param name="detailedMessage">The detailed message to be displayed if the assertion is false.</param>
        </member>
        <member name="T:nanoFramework.Runtime.Native.ConstraintException">
            <summary>
            The exception that is thrown when an action is attempted that violates a constraint. 
            </summary>
            <remarks>When a ConstraintException exception is caught, if the ExecutionConstraint object that caused this exception has not been uninstalled, the catch block implementation has a small additional amount of time during which to handle the exception. 
            If this takes too long, the exception is re-thrown automatically.
            </remarks>
        </member>
        <member name="T:nanoFramework.Runtime.Native.ExecutionConstraint">
            <summary>
            Provides a method to require a thread to complete an operation within specific constraints. 
            </summary>
        </member>
        <member name="M:nanoFramework.Runtime.Native.ExecutionConstraint.Install(System.Int32,System.Int32)">
            <summary>
            Creates a sub-thread within the calling thread, containing a constraint that requires the calling thread to complete an operation within a specified time period and at a specified priority level. 
            </summary>
            <param name="timeout">The number of clock ticks before a <see cref="T:nanoFramework.Runtime.Native.ConstraintException"/> exception is thrown. Note that the value -1 in this parameter indicates that the current constraint exception is to be uninstalled.</param>
            <param name="priority">The priority level of the calling thread.</param>
            <remarks>If the specified time period expires before the thread has completed the operation, a ConstraintException exception is thrown. Note that the time that was set in the timeout parameter is standard clock time, not thread execution time.
            The priority level can only be raised for threads that already have a priority level higher than 0 (zero).
            </remarks>
            <exception cref="T:System.Exception">The timeout parameter is less than -1.</exception>
            <exception cref="T:System.Exception">The system is unable to identify the thread that is installing this constraint.</exception>
            <exception cref="T:System.Exception">The thread installing this constraint does not own the sub-thread that the constraint applies to.</exception>
        </member>
        <member name="T:nanoFramework.Runtime.Native.RTC">
            <summary>
            Provides a set of methods that help developers to manage the RTC (Real Time Clock) on the target device.
            </summary>
        </member>
        <member name="M:nanoFramework.Runtime.Native.RTC.SetSystemTime(System.DateTime)">
            <summary>
            Sets the current system time and date.
            </summary>
            <param name="time"><see cref="T:System.DateTime"/> structure that contains the new system date and time.</param>
            <returns>If the function succeeds, the return value is true.</returns>
            <remarks>This method is specific to nanoFramework. The actual availability of the resulting feature depends on the availability on target platform that's running the nanoCLR.</remarks>
        </member>
        <member name="M:nanoFramework.Runtime.Native.RTC.SetAlarm(System.DateTime)">
            <summary>
            Sets the date and time for the next alarm that will wake-up the processor.
            </summary>
            <param name="time"><see cref="T:System.DateTime"/> to set.</param>
            <returns>If the function succeeds, the return value is true.</returns>
            <remarks>This method is specific to nanoFramework. The actual availability of the resulting feature depends on the availability on target platform that's running the nanoCLR.</remarks>
        </member>
        <member name="T:nanoFramework.Runtime.Hardware.SystemInfo">
            <summary>
            Provides information about the system.
            </summary>
        </member>
        <member name="P:nanoFramework.Runtime.Hardware.SystemInfo.Version">
            <summary>
            Gets a string containing version information about this system. 
            </summary>
        </member>
        <member name="P:nanoFramework.Runtime.Hardware.SystemInfo.OEMString">
            <summary>
            Gets a string that contains information provided by the equipment manufacturer (OEM) about this system.
            </summary>
        </member>
        <member name="P:nanoFramework.Runtime.Hardware.SystemInfo.OEM">
            <summary>
            Gets a value that represents an original equipment manufacturer (OEM).
            </summary>
        </member>
        <member name="P:nanoFramework.Runtime.Hardware.SystemInfo.Model">
            <summary>
            Gets a value that represents a product model.
            </summary>
        </member>
        <member name="P:nanoFramework.Runtime.Hardware.SystemInfo.SKU">
            <summary>
            Gets a value that represents a product's stock-keeping unit (SKU).
            </summary>
        </member>
    </members>
</doc>
